{"version":3,"file":"static/js/340.146a9cb7.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactLabel\":\"ContactForm_contactLabel__vt5it\",\"contactInputName\":\"ContactForm_contactInputName__uJfRf\",\"contactInputNumber\":\"ContactForm_contactInputNumber__8IhvW\",\"buttonAdd\":\"ContactForm_buttonAdd__Mr+ls\"};","// export const getAllContacts = ({contacts}) => contacts.items;\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport styles from './ContactForm.module.css';\n\nimport { fetchAddContact } from 'redux/contacts/contacts-operations';\n\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\n// import { addContact } from 'redux/contacts/contacts-slice';\n// import { nanoid } from 'nanoid';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n \n    const checkContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase());\n\n    checkContact\n      ? alert(`${name} is already in contacts`)\n      : dispatch(fetchAddContact(contact)) && reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.contactForm} onSubmit={handleSubmit}>\n      <label className={styles.contactLabel}>\n        Name\n        <input\n          className={styles.contactInputName}\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={styles.contactLabel}>\n        Number\n        <input\n          className={styles.contactInputNumber}\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={styles.buttonAdd} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;","export const getFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"button\":\"ContactList_button__7kL4l\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { fetchDeleteContact } from 'redux/contacts/contacts-operations';\n\nimport styles from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    if (filter === '') {\n      return contacts;\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <ul>\n      {visibleContacts.map(({ name, number, id }) => (\n        <li key={id} className={styles.contactItem}>\n          {name} : <span>{number}</span>\n          <button className={styles.button} onClick={() => dispatch(fetchDeleteContact(id))}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactFilter\":\"Filter_contactFilter__0yOzc\",\"contactFilterLabel\":\"Filter_contactFilterLabel__hItpF\",\"contactFilterInput\":\"Filter_contactFilterInput__aDwOu\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { setFilter } from 'redux/filter/filter-slice';\n\nimport styles from './Filter.module.css'\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = evt => {\n    dispatch(setFilter(evt.currentTarget.value));\n  };\n\n  return (\n    <div className={styles.contactFilter}>\n      <label className={styles.contactFilterLabel}>Find contact by name</label>\n      <input className={styles.contactFilterInput} type=\"text\" value={filter} onChange={changeFilter}></input>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionContacts\":\"Contacts_sectionContacts__a4iGH\",\"title\":\"Contacts_title__LxdN4\"};","// const Contacts = () => {\n//     return (\n//         <div>\n//             <p>Contacts</p>\n//         </div>\n//     )\n// }\n\n// export default Contacts;\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\n\nimport styles from './Contacts.module.css';\nimport { selectContacts, selectLoading } from 'redux/contacts/contacts-selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const contacts = useSelector(selectContacts);\n\n\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.sectionContacts}>\n      <h1 className={styles.title}>Phonebook</h1>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <h2 className={styles.title}>Contacts</h2>\n      {contacts.length > 1 && <Filter />}\n      {isLoading && 'Loading...'}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;"],"names":["selectContacts","state","contacts","items","selectLoading","isLoading","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","className","styles","onSubmit","preventDefault","contact","checkContact","find","toLowerCase","alert","fetchAddContact","onChange","type","pattern","title","required","getFilter","filter","visibleContacts","normalizedFilter","includes","getVisibleContacts","map","id","onClick","fetchDeleteContact","evt","setFilter","useEffect","fetchContacts","length"],"sourceRoot":""}