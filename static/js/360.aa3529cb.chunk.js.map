{"version":3,"file":"static/js/360.aa3529cb.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","redux/filter/filter-selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// export const getAllContacts = ({contacts}) => contacts.items;\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Box, Button, Container, TextField, Typography } from '@mui/material';\n// import styles from './ContactForm.module.css';\nimport { Notify } from 'notiflix';\n\nimport { fetchAddContact } from 'redux/contacts/contacts-operations';\n\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\n// import { addContact } from 'redux/contacts/contacts-slice';\n// import { nanoid } from 'nanoid';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    const checkContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    checkContact\n      ? Notify.warning(`${name} is already in contacts`)\n      : dispatch(fetchAddContact(contact)) && reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container sx={{ marginTop: '10' }}>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        sx={{\n          display: 'flex',\n          '& .MuiTextField-root': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n          <Typography variant=\"h4\" gutterBottom>\n            ADD CONTACT\n          </Typography>\n          <TextField\n            name=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            onChange={handleChange}\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <TextField\n            name=\"number\"\n            label=\"Number\"\n            type=\"tel\"\n            onChange={handleChange}\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <Button type=\"submit\" variant=\"outlined\" size=\"medium\">\n            ADD CONTACT\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default ContactForm;\n","export const getFilter = state => state.filter;","import { useSelector, useDispatch } from 'react-redux';\n\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { fetchDeleteContact } from 'redux/contacts/contacts-operations';\n\nimport { Box, ListItemText, List, ListItem } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Avatar from '@mui/material/Avatar';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    if (filter === '') {\n      return contacts;\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <Box>\n      <List sx={{ width: '350px' }}>\n        {visibleContacts.map(({ name, number, id }) => (\n          <ListItem key={id}>\n            <Avatar>\n              <AccountBoxIcon fontSize=\"small\" />\n            </Avatar>\n            <ListItemText primary={name} sx={{ marginLeft: '15px' }} />\n            <ListItemText primary={number} />\n            <IconButton\n              onClick={() => dispatch(fetchDeleteContact(id))}\n              edge=\"end\"\n              aria-label=\"delete\"\n            >\n              <DeleteIcon />\n            </IconButton>\n           \n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { Box, TextField } from '@mui/material';\n// import styles from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = evt => {\n    dispatch(setFilter(evt.currentTarget.value));\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <TextField\n        label=\"Search contact\"\n        type=\"text\"\n        value={filter}\n        onChange={changeFilter}\n      />\n    </Box>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Box, Container, Typography } from '@mui/material';\n\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\n\nimport {\n  selectContacts,\n  selectLoading,\n} from 'redux/contacts/contacts-selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <main>\n      <Container sx={{ marginTop: '40px', display: 'flex' }}>\n        <Box>\n          {/* <Typography variant=\"h4\" gutterBottom>\n            ADD CONTACT\n          </Typography> */}\n          <ContactForm />\n          <div>{isLoading && 'Request in progress...'}</div>\n        </Box>\n        <Box sx={{ marginLeft: '200px' }}>\n          <Typography variant=\"h4\" gutterBottom>\n            YOUR CONTACTS\n          </Typography>\n          {contacts.length > 1 && <Filter />}\n          {isLoading && 'Loading...'}\n          <ContactList />\n        </Box>\n      </Container>\n    </main>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectLoading","isLoading","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","Container","sx","marginTop","Box","component","onSubmit","preventDefault","contact","checkContact","find","toLowerCase","Notify","fetchAddContact","display","m","width","noValidate","autoComplete","flexDirection","Typography","variant","gutterBottom","TextField","label","type","onChange","pattern","title","required","Button","size","getFilter","filter","visibleContacts","normalizedFilter","includes","getVisibleContacts","List","map","id","ListItem","Avatar","AccountBox","fontSize","ListItemText","primary","marginLeft","IconButton","onClick","fetchDeleteContact","edge","Delete","evt","setFilter","useEffect","fetchContacts","length"],"sourceRoot":""}